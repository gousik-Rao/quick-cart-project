# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    env:
      # SPRING APP PROPERTIES
      SPRING_APP_JWTSECRET: ${{ secrets.JWT_SECRET }}
      SPRING_APP_JWTEXPIRATIONMS: 999999999
      SPRING_ECOM_APP_JWTCOOKIENAME: springBootEcom

      # DB PROPERTIES
      DATASOURCE_URL: jdbc:h2:mem:testdb
      DATASOURCE_USER: testuser
      DATASOURCE_PASSWORD: testpass

      # STRIPE
      STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}

      # IMAGE + FRONTEND
      IMAGE_BASE_URL: http://localhost:8080/images
      FRONTEND_URL: http://localhost:3000
      PROJECT_IMAGE: images/
      
      # GOOGLE VERTEX AI
      GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      SPRING_AI_VERTEX_AI_GEMINI_LOCATION: us-central1
      SPRING_AI_VERTEX_AI_GEMINI_CREDENTIALS: ${{secrets.GCP_SERVICE_ACCOUNT_JSON}}
      SPRING_AI_VERTEX_AI_GEMINI_CHAT_MODEL: gemini-pro

      # OPTIONAL: PROFILE AND PORT
      PORT: 8080

      
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven
        
    - name: Build with Maven
      run: mvn -B package --file pom.xml

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    - name: Update dependency graph
      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6

    - name: Create Vertex AI Service Account JSON File
      run: |
        mkdir -p src/main/resources  # Ensure the directory exists
          echo "${SPRING_AI_VERTEX_AI_GEMINI_CREDENTIALS}" > src/main/resources/vertex-ai-api-key.json
          ls src/main/resources/  # Debug: confirm file creation
      
    - name: Debug ENV Vars (temp)
      run: env | grep -E 'GCP|SPRING_AI'  # Improved grep for relevant vars
      
    - name: Build with Maven
      run: mvn -B package --file pom.xml -X  # Add -X for verbose Maven logging to see property resolution

    - name: Generate application.yml
      run: |
        cat <<EOF > src/main/resources/application.yml
        spring:
          ai:
            vertex:
              ai:
                gemini:
                  project-id: ${GCP_PROJECT_ID}
                  location: ${SPRING_AI_VERTEX_AI_GEMINI_LOCATION}
                  service-account-location: classpath:vertex-ai-api-key.json
                  chat:
                    model: ${SPRING_AI_VERTEX_AI_GEMINI_CHAT_MODEL}
                    
          # Add other required sections here
          EOF
          ls src/main/resources/  # Debug
          
      # For debugging
    - name: Debug ENV Vars (temp)
      run: echo "${SPRING_AI_VERTEX_GEMINI_CREDENTIALS}" | jq .
